/* Ensure the container takes up the full viewport height */
.container {
  display: flex;
  flex-direction: column;
  position: relative; /* Needed for absolute positioning of the result box */
  overflow: hidden; /* Prevent scrolling */
}

/* Fixed position for top video */
.video-top {
  position: fixed;
  top: 130px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #000;
  max-width: 300px;
  max-height: 300px;
  width: auto; /* Allow width to fit content */
  height: auto; /* Allow height to fit content */
  z-index: 1; /* Ensure it is below the result box */
}

/* Fixed position for bottom video */
.video-bottom {
  position: fixed;
  bottom: 250px; /* Adjusted for space between the bottom video and the controls */
  left: 50%;
  transform: translateX(-50%);
  background-color: #000;
  max-width: 300px;
  max-height: 300px;
  width: auto; /* Allow width to fit content */
  height: auto; /* Allow height to fit content */
  z-index: 1; /* Ensure it is below the result box */
}

/* Ensure videos take up the max height and width but do not exceed 300px */
.video-top video,
.video-bottom video {
  max-width: 100%;
  max-height: 100%;
  object-fit: cover; /* Ensures the video covers the area without distortion */
}

/* Style for canvas container */
.canvas-container {
  background: transparent;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* So it doesn’t capture mouse events */
}

/* Ensure canvas takes up the full size of its container */
.canvas-container canvas {
  width: 100%;
  height: 100%;
  display: none; /* Hide canvas if not needed */
}

/* Controls styling */
.controls {
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 1rem;
  z-index: 10; /* Ensure controls are above video */
  background-color: rgba(
    255,
    255,
    255,
    0
  ); /* Optional: background for readability */
  /* padding: 1rem; */
  border-radius: 8px;
}

/* Controls heading */
.controls h3 {
  margin-bottom: 0.5rem;
}

/* Input fields */
.controls input {
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  width: 200px;
}

/* Buttons */
.controls button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  background-color: #007bff;
  color: white;
  cursor: pointer;
  font-size: 1rem;
}

.controls button:disabled {
  background-color: #6c757d;
  cursor: not-allowed;
}

/* Centered result box */
.result-box {
  position: fixed;
  top: 45%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 300px;
  height: 200px;
  padding: 20px;
  background-color: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 10px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
  text-align: center;
  font-size: 1.5rem;
  z-index: 5;
  box-sizing: border-box; /* Include padding in width and height */
  display: flex;
  flex-direction: column; /* Stack items vertically */
  justify-content: center; /* Center content vertically */
  align-items: center; /* Center content horizontally */
}

.result-box img {
  margin: 0 10px; /* Space between images and text */
  width: 80px;
  height: 80px;
}
.result-box .round {
  position: fixed;
  left: 3px;
  top: 3px;
  font-size: 12pt;
}
.result-box p {
  margin: 0 15px; /* Space between text and images */
  font-size: 1em; /* Adjust font size as needed */
  text-align: center; /* Center text */
}
.video-hidden {
  display: none;
}

.table-container {
  position: fixed;
  top: 20%;
  left: 0;
  width: 300px;
  border-collapse: collapse;
  overflow-y: auto; /* Scroll if content overflows */
  /* background-color: rgba(255, 255, 255, 0.9); */
  border-right: 2px solid #ddd; /* Light border for separation */
  padding: 10px; /* Padding inside the container */
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1); /* Optional shadow for a lifted effect */
  z-index: 2; /* Ensure it’s above other elements but below the result box */
}

.table-container table {
  width: 100%; /* Full width of the container */
  border-collapse: collapse; /* Collapse borders for better appearance */
}

.table-container th,
.table-container td {
  padding: 8px 12px;
  border: 1px solid #ddd;
  text-align: center;
}

.table-container .title {
  color: #000000;
  text-align: center;
  background-color: #525050;
}

.chat-section {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 300px;
  max-height: 400px;
  background-color: #f1f1f1;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  padding: 10px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  z-index: 1000; /* Ensures the chat is above other elements */
}

.chat-section h3 {
  margin-top: 0;
  font-size: 1.2em;
  text-align: center;
  color: #333;
}

.chat-section p {
  font-size: 0.9em;
  margin: 5px 0;
  padding: 5px;
  background-color: #fff;
  border-radius: 5px;
  word-wrap: break-word;
  color: #333;
  max-width: 100%;
  overflow: hidden;
  text-align: left;
}

.chat-section .from {
  font-weight: bold;
}

.chat-section input[type="text"] {
  margin-top: auto;
  padding: 8px;
  font-size: 0.9em;
  border: 1px solid #ddd;
  border-radius: 5px;
  width: 100%;
  box-sizing: border-box;
}

.chat-section button {
  margin-top: 5px;
  padding: 8px;
  width: 100%;
  font-size: 0.9em;
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.chat-section button:hover {
  background-color: #45a049;
}

.chat-section .chat-box {
  flex-grow: 1;
  overflow-y: auto;
  padding: 5px;
  border: 1px solid #ddd;
  margin-bottom: 10px;
}

.hp-bar {
  display: flex;
  justify-content: space-between; /* Space out the name and HP */
  align-items: center; /* Center align vertically */
  height: 20px;
  color: white;
  text-align: center;
  padding: 0 10px; /* Add padding for better spacing */
  box-sizing: border-box; /* Ensure padding does not affect width */
}

.hp-bar.local {
  background-color: green;
}

.hp-bar.remote {
  background-color: blue;
}

.player-name {
  flex: 1; /* Allow name to take available space */
}

.player-hp {
  margin-left: auto; /* Push HP value to the far right */
}
